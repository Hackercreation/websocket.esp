#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <uri/UriBraces.h>

#define WIFI_SSID "HackerCreation"
#define WIFI_PASSWORD "12345678"
// Defining the WiFi channel speeds up the connection:
#define WIFI_CHANNEL 6

WebServer server(80);

const int LED1 = 26;
const int LED2 = 27;
const int LED3 = 25;

bool led1State = false;
bool led2State = false;
bool led3State = false;

void sendHtml() {
  String response = R"(
    <!DOCTYPE html><html>
      <head>
        <title>Home Automation System</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
          /* General body styling */
          body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(to bottom, #003366, #006699);
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            position: relative;
          }

          /* Header styling */
          h1 {
            margin: 0.5em;
            font-size: 2.5em;
            color: #00ff99;
            text-shadow: 2px 2px 4px #000;
          }

          /* Button container styling */
          .container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            width: 80%;
            max-width: 1000px;
          }

          /* Individual button blocks */
          .block {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
          }

          h2 {
            font-size: 1.5em;
            margin-bottom: 1em;
            text-shadow: 1px 1px 2px #000;
          }

          .btn {
            background-color: #28a745;
            border: none;
            color: #fff;
            padding: 15px 30px;
            font-size: 1.2em;
            text-decoration: none;
            border-radius: 5px;
            transition: all 0.3s ease-in-out;
            display: inline-block;
          }

          .btn:hover {
            background-color: #218838;
            transform: scale(1.05);
          }

          .btn.OFF {
            background-color: #6c757d;
          }

          /* Footer styling */
          .footer {
            position: fixed;
            bottom: 20px;
            right: 20px;
            font-size: 1.2em;
            font-family: 'Montserrat', sans-serif;
            background: -webkit-linear-gradient(45deg, #ff0066, #ffcc00);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
            animation: glow 3s infinite alternate;
          }

          @keyframes glow {
            from {
              text-shadow: 0 0 10px #ff0066, 0 0 20px #ffcc00, 0 0 30px #ff9900;
            }
            to {
              text-shadow: 0 0 20px #ffcc00, 0 0 30px #ff0066, 0 0 40px #ff3300;
            }
          }

          /* Media queries for responsiveness */
          @media (max-width: 768px) {
            h1 {
              font-size: 2em;
            }

            h2 {
              font-size: 1.2em;
            }

            .btn {
              font-size: 1em;
              padding: 10px 20px;
            }

            .footer {
              font-size: 1em;
            }
          }
        </style>
      </head>
            
      <body>
        <h1>Home Automation System</h1>

        <div class="container">
          <div class="block">
            <h2>LED 1</h2>
            <a href="/toggle/1" class="btn LED1_TEXT">LED1_TEXT</a>
          </div>
          <div class="block">
            <h2>LED 2</h2>
            <a href="/toggle/2" class="btn LED2_TEXT">LED2_TEXT</a>
          </div>
          <div class="block">
            <h2>LED 3</h2>
            <a href="/toggle/3" class="btn LED3_TEXT">LED3_TEXT</a>
          </div>
        </div>

        <div class="footer">By Hacker Creation</div>
      </body>
    </html>
)";
  response.replace("LED1_TEXT", led1State ? "ON" : "OFF");
  response.replace("LED2_TEXT", led2State ? "ON" : "OFF");
  response.replace("LED3_TEXT", led3State ? "ON" : "OFF");
  server.send(200, "text/html", response);
}

void setup(void) {
  Serial.begin(115200);

  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);

  // Initialize LEDs to OFF
  digitalWrite(LED1, LOW);
  digitalWrite(LED2, LOW);
  digitalWrite(LED3, LOW);

  // Connect to WiFi
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD, WIFI_CHANNEL);
  Serial.print("Connecting to WiFi ");
  Serial.print(WIFI_SSID);
  while (WiFi.status() != WL_CONNECTED) {
    delay(100);
    Serial.print(".");
  }
  Serial.println(" Connected!");

  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Setup server routes
  server.on("/", sendHtml);

  server.on(UriBraces("/toggle/{}"), []() {
    String led = server.pathArg(0);
    Serial.print("Toggle LED #");
    Serial.println(led);

    switch (led.toInt()) {
      case 1:
        led1State = !led1State;
        digitalWrite(LED1, led1State ? HIGH : LOW);
        break;
      case 2:
        led2State = !led2State;
        digitalWrite(LED2, led2State ? HIGH : LOW);
        break;
      case 3:
        led3State = !led3State;
        digitalWrite(LED3, led3State ? HIGH : LOW);
        break;
    }

    sendHtml();
  });

  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
  delay(2);
}
